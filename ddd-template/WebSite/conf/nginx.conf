
user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}

#设定http服务器，利用它的反向代理功能提供负载均衡支持
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    #sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，
    #必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.
    sendfile        on;
    #tcp_nopush     on;

    #连接超时时间
    keepalive_timeout  120;
    tcp_nodelay        on;

    #gzip压缩开关
    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

    #HTTP服务器
    server {
        #监听80端口，80端口是知名端口号，用于HTTP协议
        listen       80;

        #定义使用www.xx.com访问
        server_name  47.110.127.118;

        #首页
        index index.html

        #指向webapp的目录
        root /usr/share/nginx/html;

        #编码格式
        charset utf-8;

        #反向代理的路径（和upstream绑定），location 后面设置映射的路径
        location /api/ {
            proxy_pass http://47.110.127.118:8001/;
        }

        location / {
         # ng build生成的文件夹目录
         root   /usr/share/nginx/html;
         try_files $uri $uri/ /index.html =404;
         index  index.html;
        }
    }

    #server {
    #    listen       8288;
    #    server_name  47.110.127.118;
    #    charset utf-8;
    #    add_header 'Access-Control-Allow-Origin' '*';
    #    add_header 'Access-Control-Allow-Headers' 'X-Requested-With';
    #    add_header 'Access-Control-Allow-Methods' 'PUT,POST,GET,DELETE,OPTIONS';
    #    location / {
    #        root  /file;
    #    }
    #}

}
